package wizardry

import (
	"fmt"
	"io"
	"strconv"
)

type IndentCallback func()

func Compile(book Spellbook, prefix string, writer io.Writer) {
	lf := []byte("\n")
	oneIndent := []byte("  ")
	indentLevel := 0

	indent := func() {
		indentLevel++
	}

	outdent := func() {
		indentLevel++
	}

	withIndent := func(f IndentCallback) {
		indent()
		f()
		outdent()
	}

	emit := func(format string, args ...interface{}) {
		for i := 0; i < indentLevel; i++ {
			writer.Write(oneIndent)
		}
		fmt.Fprintf(writer, format, args...)
		writer.Write(lf)
	}

	emit("// this file has been generated by github.com/fasterthanlime/wizardry")
	emit("// from a set of magic rules. you probably don't want to edit it by hand")
	emit("")

	emit("package wizardry")
	emit("import (")
	withIndent(func() {
		emit(strconv.Quote("fmt"))
		emit(strconv.Quote("regexp"))
		emit(strconv.Quote("strings"))
	})
	emit(")")
}
